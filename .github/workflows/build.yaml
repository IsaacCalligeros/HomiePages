name: build
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'
    - name: Install Dependencies
      run: npm install
      working-directory: src/WebUI/ClientApp
    - name: Client build
      run: npm build
      working-directory: src/WebUI/ClientApp
    - name: Install dotnet ef
      run: dotnet tool install --global dotnet-ef
    - name: Build with dotnet
      run: dotnet build --configuration Release HomiePages.sln
    - name: Inject Secrets
      uses: microsoft/variable-substitution@v1
      with:
        files: './src/WebUI/bin/Release/net5.0/appsettings.Production.json'
      env:
        ConnectionStrings.DefaultConnection: ${{ secrets.POSTGRESQL_CONNECTION_STRING }}
        AdminPassword: ${{ secrets.ADMIN_PASSWORD }}
        IdentityServer.Key.Password: ${{secrets.IDENTITYSERVER_CERT_PASSWORD}}
    - name: Push to Linode
      run: |
          echo "$ssh_key" > ~/ssh_key
          chmod 600 ~/ssh_key
          rsync -e "ssh -v -i ~/ssh_key -o StrictHostKeyChecking=no" -avzr ./src/WebUI/bin/Release/net5.0/* "$user"@"$target_ip":/var/homiepages/api
          rsync -e "ssh -v -i ~/ssh_key -o StrictHostKeyChecking=no" -avzr ./src/WebUI/ClientApp "$user"@"$target_ip":/var/homiepages/api
      env:
        ssh_key: ${{ secrets.CICD_SSH }}
        user: ${{ secrets.CICD_USER }}
        target_ip: ${{ secrets.LINODE_IP }}