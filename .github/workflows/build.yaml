name: build
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'
    - name: Install Dependencies
      run: npm install
      working-directory: src/WebUI/ClientApp
    - name: Client build
      run: npm run build
      working-directory: src/WebUI/ClientApp
    - name: Install dotnet ef
      run: dotnet tool install --global dotnet-ef
    - name: Build with dotnet
      run: dotnet build --configuration Release HomiePages.sln
    - name: Inject Secrets
      uses: microsoft/variable-substitution@v1
      with:
        files: './src/WebUI/bin/Release/net5.0/appsettings.Production.json'
      env:
        ConnectionStrings.DefaultConnection: ${{ secrets.POSTGRESQL_CONNECTION_STRING }}
        AdminPassword: ${{ secrets.ADMIN_PASSWORD }}
        IdentityServer.Key.Password: ${{secrets.IDENTITYSERVER_CERT_PASSWORD}}
        Authentication.Facebook.AppId: ${{secrets.FACEBOOK_APPID}}
        Authentication.Facebook.AppSecret: ${{secrets.FACEBOOK_APPSECRET}}
        Authentication.Google.AppId: ${{secrets.GOOGLE_APPID}}
        Authentication.Google.AppSecret: ${{secrets.GOOGLE_APPSECRET}}
    - name: Create artifacts folder
      run: |
        mkdir "$GITHUB_WORKSPACE/artifacts"
        mkdir "$GITHUB_WORKSPACE/artifacts/Infrastructure"
        mkdir "$GITHUB_WORKSPACE/artifacts/Application"
        mkdir "$GITHUB_WORKSPACE/artifacts/Domain"
        mkdir "$GITHUB_WORKSPACE/artifacts/WebUI"
    - name: Publish Infrastructure
      run: dotnet publish src/Infrastructure.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/Infrastructure"
    - name: Publish Application
      run: dotnet publish src/Application.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/Application"
    - name: Publish Domain
      run: dotnet publish src/Domain.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/Domain"
    - name: Publish WebUI
      run: dotnet publish src/WebUI.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/WebUI"

    - name: Install Octopus CLI
      uses: OctopusDeploy/install-octopus-cli-action@v1.1.8
      with:
        version: latest
    - name: Package Infrastructure
      run: |
        octo pack --id="Infrastructure" --format="Zip" --version="$PACKAGE_VERSION" --basePath="$GITHUB_WORKSPACE/artifacts/Infrastructure" --outFolder="$GITHUB_WORKSPACE/artifacts"
    - name: Package Application
      run: |
        octo pack --id="Application" --format="Zip" --version="$PACKAGE_VERSION" --basePath="$GITHUB_WORKSPACE/artifacts/Application" --outFolder="$GITHUB_WORKSPACE/artifacts"
    - name: Package Domain
      run: |
        octo pack --id="Domain" --format="Zip" --version="$PACKAGE_VERSION" --basePath="$GITHUB_WORKSPACE/artifacts/Domain" --outFolder="$GITHUB_WORKSPACE/artifacts"
    - name: Package WebUI
      run: |
        octo pack --id="WebUI" --format="Zip" --version="$PACKAGE_VERSION" --basePath="$GITHUB_WORKSPACE/artifacts/WebUI" --outFolder="$GITHUB_WORKSPACE/artifacts"
    
    - name: Push HomiePages packages
      uses: OctopusDeploy/push-package-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUSSERVERAPIKEY }}
        server: ${{ secrets.OCTOPUSSERVERURL }}
        packages: "artifacts/Infrastructure.${{ env.PACKAGE_VERSION }}.zip,artifacts/Application.${{ env.PACKAGE_VERSION }}.zip,artifacts/Domain.${{ env.PACKAGE_VERSION }}.zip,artifacts/WebUI.${{ env.PACKAGE_VERSION }}.zip"
        space: ${{ secrets.OCTOPUSSERVER_SPACE }}

    - name: Create and deploy release
      uses: OctopusDeploy/create-release-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUSSERVERAPIKEY }}
        server: ${{ secrets.OCTOPUSSERVERURL }}
        space: ${{ secrets.OCTOPUSSERVER_SPACE }}
        project: "HomiePages"
        deploy_to: "Development"
        progress: true
    
    - name: Run a runbook in octopus deploy
      uses: OctopusDeploy/run-runbook-action@1.0.1
      with:
        api_key: ${{ secrets.OCTOPUSSERVERAPIKEY }}
        environments: 'Development'
        project: 'HomiePages'
        runbook: 'Deploy HomiePages'
        server: ${{ secrets.OCTOPUSSERVERURL }}
        space: ${{ secrets.OCTOPUSSERVER_SPACE }}
        show_progress: 'true'