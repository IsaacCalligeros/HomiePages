/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.9.4.0 (NJsonSchema v10.3.1.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming



export interface BaseContainer {
    containerId: number;
    userId: string | null;
    layoutId: string | null;
    layout: Layout | null;
    componentType: ComponentType;
}

export interface Layout {
    i: string | null;
    h: number;
    w: number;
    x: number;
    y: number;
}

export enum ComponentType {
    News = 0,
    Weather = 1,
    Portfolio = 2,
    ToDo = 3,
    Notes = 4,
    Strava = 5,
}

export interface AuditableEntity {
    created: Date | null;
    createdBy: string | null;
    lastModified: Date | null;
    lastModifiedBy: string | null;
}

export interface Equity extends AuditableEntity {
    id: number;
    ticker: string | null;
    type: EquityType;
    numberHeld: number;
    purchasePrice: number;
    portfolioId: number;
    userId: string | null;
}

export enum EquityType {
    Stock = 0,
    Cryptocurrency = 1,
}

export interface SearchResponse {
    symbol: string | null;
    securityName: string | null;
    securityType: string | null;
    region: string | null;
    exchange: string | null;
}

export interface Quote {
    symbol: string | null;
    companyName: string | null;
    primaryExchange: string | null;
    calculationPrice: string | null;
    open: number | null;
    openTime: number | null;
    openSource: string | null;
    close: number | null;
    closeTime: number | null;
    closeSource: string | null;
    high: number | null;
    highTime: number | null;
    highSource: string | null;
    low: number | null;
    lowTime: number | null;
    lowSource: string | null;
    latestPrice: number | null;
    latestSource: string | null;
    latestTime: string | null;
    latestUpdate: number | null;
    latestVolume: number | null;
    iexRealtimePrice: number | null;
    iexRealtimeSize: number | null;
    iexLastUpdated: number | null;
    delayedPrice: number | null;
    delayedPriceTime: number | null;
    oddLotDelayedPrice: number | null;
    oddLotDelayedPriceTime: number | null;
    extendedPrice: number | null;
    extendedChange: number | null;
    extendedChangePercent: number | null;
    extendedPriceTime: number | null;
    previousClose: number | null;
    previousVolume: number | null;
    change: number | null;
    changePercent: number | null;
    volume: number | null;
    iexMarketPercent: number | null;
    iexVolume: number | null;
    avgTotalVolume: number | null;
    iexBidPrice: number | null;
    iexBidSize: number | null;
    iexAskPrice: number | null;
    iexAskSize: number | null;
    iexOpen: number | null;
    iexOpenTime: number | null;
    iexClose: number | null;
    iexCloseTime: number | null;
    marketCap: number | null;
    peRatio: number | null;
    week52High: number | null;
    week52Low: number | null;
    ytdChange: number | null;
    lastTradeTime: number | null;
    isUSMarketOpen: boolean;
    sector: string | null;
}

export interface NewsDto {
    status: string | null;
    totalResults: number;
    articles: Article[];
}

export interface Article {
    source: Source | null;
    author: string | null;
    title: string | null;
    description: string | null;
    url: string | null;
    urlToImage: string | null;
    publishedAt: Date;
    content: string | null;
}

export interface Source {
    id: string | null;
    name: string | null;
}

export interface Control {
    containerId: number;
    container: BaseContainer | null;
}

export interface Notes extends Control {
    id: number;
    userId: string | null;
    items: NoteItem[];
}

export interface NoteItem extends AuditableEntity {
    id: number;
    content: string | null;
    order: number;
    userId: string | null;
}

export interface NotesModel {
    id: number;
    userId: string | null;
    items: NotesItemModel[];
}

export interface NotesItemModel {
    id: number;
    content: string | null;
    order: number;
}

export interface PortfolioModel {
    equities: EquityModel[];
    id: number;
    userId: string | null;
}

export interface EquityModel {
    id: number;
    ticker: string | null;
    type: EquityType;
    numberHeld: number;
    purchasePrice: number;
    portfolioId: number;
    currentPrice: number;
    change: number;
}

export interface Portfolio extends Control {
    id: number;
    userId: string | null;
    equities: Equity[] | null;
}

export interface ToDoModel {
    items: ToDoItemModel[];
    id: number;
    userId: string | null;
}

export interface ToDoItemModel {
    id: number;
    toDoText: string | null;
    dueDate: Date | null;
    completionDate: Date | null;
    order: number;
    toDoTypeId: number | null;
    toDoType: ToDoType | null;
}

export interface ToDoType {
    id: number;
    type: string | null;
}

export interface ToDoItem extends AuditableEntity {
    id: number;
    toDoText: string | null;
    dueDate: Date | null;
    completionDate: Date | null;
    order: number;
    toDoTypeId: number | null;
    toDoType: ToDoType | null;
    userId: string | null;
}

export interface WeatherAndForecast {
    currentWeather: CurrentWeather | null;
    weather: WeatherDto | null;
}

export interface CurrentWeather {
    coord: Coord | null;
    weather: WeatherData[] | null;
    base: string | null;
    main: DayTempDetails | null;
    visibility: number;
    wind: Wind | null;
    clouds: Clouds | null;
    dt: number;
    sys: DayDetails | null;
    timezone: number;
    id: number;
    name: string | null;
    cod: number;
}

export interface Coord {
    lon: number;
    lat: number;
}

export interface WeatherData {
    id: number;
    main: string | null;
    description: string | null;
    icon: string | null;
}

export interface DayTempDetails {
    temp: number;
    feelsLike: number;
    temp_min: number;
    temp_max: number;
    pressure: number;
    humidity: number;
}

export interface Wind {
    speed: number;
    deg: number;
    gust: number;
}

export interface Clouds {
    all: number;
}

export interface DayDetails {
    type: number;
    id: number;
    country: string | null;
    sunrise: number;
    sunriseDate: Date;
    sunset: number;
    sunsetDate: Date;
}

export interface WeatherDto {
    cod: number;
    message: number;
    cnt: number;
    list: Data[] | null;
    city: CityDetails | null;
}

export interface Data {
    dt: number;
    main: MainClass | null;
    weather: WeatherElement[] | null;
    clouds: Clouds | null;
    wind: Wind | null;
    visibility: number;
    pop: number;
    sys: Sys | null;
    dt_txt: Date;
    rain: Rain | null;
}

export interface MainClass {
    temp: number;
    feelsLike: number;
    temp_min: number;
    temp_max: number;
    pressure: number;
    seaLevel: number;
    grndLevel: number;
    humidity: number;
    tempKf: number;
}

export interface WeatherElement {
    id: number;
    main: string | null;
    description: string | null;
    icon: string | null;
}

export interface Sys {
    pod: string | null;
}

export interface Rain {
    "3h": number;
}

export interface CityDetails {
    id: number;
    name: string | null;
    coord: Coord2 | null;
    country: string | null;
    population: number;
    timezone: number;
    sunrise: number;
    sunriseDate: Date;
    sunset: number;
    sunsetDate: Date;
}

export interface Coord2 {
    lat: number;
    lon: number;
}

export interface FileResponse {
    data: Blob;
    status: number;
    fileName?: string;
    headers?: { [name: string]: any };
}